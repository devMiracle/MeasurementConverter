package conversion.view;

import javax.swing.JOptionPane;
import javax.swing.JOptionPane;
import conversion.model.Conversion;
import javax.swing.JOptionPane;
   
public class View2 extends javax.swing.JFrame {

    private javax.swing.JLabel equalityLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox measureScale;
    private javax.swing.JComboBox unitScale1;
    private javax.swing.JComboBox unitScale2;
    // End of variables declaration
    /**
     * Creates new form ConversionView
     */
    public View2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        measureScale = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        unitScale1 = new javax.swing.JComboBox();
        unitScale2 = new javax.swing.JComboBox();
        equalityLabel = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONVERSION APPLICATION");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        measureScale.setBackground(new java.awt.Color(204, 204, 204));
        measureScale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        measureScale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lenth", "Area", "Volume" }));
        measureScale.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        measureScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                measureScaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(measureScale, 0, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(measureScale, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        unitScale1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        unitScale1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Foot", "Yard", "Inch" }));
        unitScale1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitScale1ActionPerformed(evt);
            }
        });

        unitScale2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        unitScale2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Foot", "Yard", "Inch" }));
        unitScale2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitScale2ActionPerformed(evt);
            }
        });

        equalityLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        equalityLabel.setText("=");

        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unitScale1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(equalityLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unitScale2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(unitScale2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(equalityLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unitScale1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>

    private void measureScaleActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:

//        if(measureScale.getSelectedItem() == "Lenth"){
//            unitScale1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Foot", "Yard", "Inch" }));
//            unitScale2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Foot", "Yard", "Inch" }));
//        }
//        else if(measureScale.getSelectedItem()=="Area"){
//            unitScale1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Square Foot", "Square Yard", "Square Inch" }) {});
//            unitScale2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Square Foot", "Square Yard", "Square Inch" }));
//        }
//        else if(measureScale.getSelectedItem()=="Volume"){
//            unitScale1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cubic Foot", "Cubic Inch", "Cubic Meter" }));
//            unitScale2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cubic Foot", "Cubic Inch", "Cubic Meter" }));
//        }
        
        
    }                                            

    private void unitScale2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
            if(jTextField1.getText().isEmpty() || !jTextField1.getText().matches("-?\\d+(\\.\\d+)?")){
                
            }
            else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
            }
             else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
  
    }                                          

    private void unitScale1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
            if(!jTextField1.getText().matches("-?\\d+(\\.\\d+)?") ){
                JOptionPane.showMessageDialog(null, "Enter digit");
            }
            else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Foot" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.feetToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Yard" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.yardToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Inch"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToInch(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Foot"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToFeet(input1);
                    jTextField2.setText(String.valueOf(convert1));
                }
             else if(unitScale1.getSelectedItem() == "Inch" && unitScale2.getSelectedItem() == "Yard"){
                    double input1 = Double.parseDouble(jTextField1.getText());
                    
                    Conversion cal = new Conversion();
                    double convert1 = cal.inchToYard(input1);
                    jTextField2.setText(String.valueOf(convert1));
                    }
             
        
        }                                          
    
}
